{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GONZALO\\\\Documents\\\\706\\\\Ingenieria de software II\\\\react\\\\mi-app-modular\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst collectionRef = collection(db, \"tasks\");\nconst q = query(collectionRef, orderBy(\"createdAt\", \"asc\"));\nconst TodoList = () => {\n  _s();\n  // Consumir el contexto de tema\n  const {\n    theme\n  } = useContext(ThemeContext);\n  // Hook de estado para manejar las tareas\n  const [tasks, setTasks] = useState([\n    /* {id: 1, text: 'Aprender react', completed: false},\n     {id: 2, text: 'Construir una app', completed: false},\n     {id: 3, text: 'Modularizar componentes', completed: false}*/\n  ]);\n\n  //Nuevo estado para el campo de texto\n  const [inputValue, setInputValue] = useState('');\n\n  //Funcion para manejar el envio del formulario\n  const handleAddTask = e => {\n    e.preventDefault(); // Evitar que la pagina se recargue\n    if (inputValue.trim() !== '') {\n      // Validar que NO este vacio (corregido !== en lugar de ===)\n      const newTask = {\n        id: Date.now(),\n        // Generar un id unico basado en la fecha actual\n        text: inputValue,\n        completed: false // Nueva tarea siempre empieza como no completada\n      };\n      setTasks([...tasks, newTask]); // Añadimos la nueva tarea a la lista\n      setInputValue(''); // Limpiamos el campo de texto\n    }\n  };\n\n  //Funcion para eliminar una tarea\n  const handleDeleteTask = taskId => {\n    // Filtramos la tarea que tenga el id especificado\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n\n  //Funcion para marcar una tarea como completada/no completada\n  const handleToggleComplete = taskId => {\n    // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-list-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mi Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task.id),\n            className: \"complete-btn\",\n            title: task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\",\n            children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            className: \"delete-btn\",\n            title: \"Eliminar tarea\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"A\\xF1ade una nueva tarea...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"6/VmVRpA+CYeYREqxW7sxeETQ9o=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useContext","Trash2","Check","ThemeContext","db","collection","query","orderBy","onSnapshot","addDoc","doc","updateDoc","deleteDoc","serverTimestamp","jsxDEV","_jsxDEV","collectionRef","q","TodoList","_s","theme","tasks","setTasks","inputValue","setInputValue","handleAddTask","e","preventDefault","trim","newTask","id","Date","now","text","completed","handleDeleteTask","taskId","updatedTasks","filter","task","handleToggleComplete","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/GONZALO/Documents/706/Ingenieria de software II/react/mi-app-modular/src/components/TodoList/TodoList.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\n\nconst collectionRef = collection(db, \"tasks\");\n\nconst q = query(collectionRef, orderBy(\"createdAt\", \"asc\"));\n\nconst TodoList = () => {\n    // Consumir el contexto de tema\n    const { theme } = useContext(ThemeContext);\n    // Hook de estado para manejar las tareas\n    const [tasks, setTasks] = useState([\n        /* {id: 1, text: 'Aprender react', completed: false},\n         {id: 2, text: 'Construir una app', completed: false},\n         {id: 3, text: 'Modularizar componentes', completed: false}*/\n    ]);\n\n    //Nuevo estado para el campo de texto\n    const [inputValue, setInputValue] = useState('');\n\n    //Funcion para manejar el envio del formulario\n    const handleAddTask = (e) => {\n        e.preventDefault(); // Evitar que la pagina se recargue\n        if (inputValue.trim() !== '') { // Validar que NO este vacio (corregido !== en lugar de ===)\n            const newTask = {\n                id: Date.now(), // Generar un id unico basado en la fecha actual\n                text: inputValue,\n                completed: false // Nueva tarea siempre empieza como no completada\n            };\n            setTasks([...tasks, newTask]); // Añadimos la nueva tarea a la lista\n            setInputValue(''); // Limpiamos el campo de texto\n        }\n    }\n\n    //Funcion para eliminar una tarea\n    const handleDeleteTask = (taskId) => {\n        // Filtramos la tarea que tenga el id especificado\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n    //Funcion para marcar una tarea como completada/no completada\n    const handleToggleComplete = (taskId) => {\n        // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n        const updatedTasks = tasks.map(task =>\n            task.id === taskId ? { ...task, completed: !task.completed } : task\n        );\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n\n    \n\n    return (\n        <div className={`todo-list-container ${theme}`}>\n            <h2>Mi Lista de Tareas</h2>\n            {/*aqui mostraremos la lista de tareas*/}\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id} className={task.completed ? 'completed' : ''}>\n                        <span className=\"task-text\">{task.text}</span>\n                        <div className=\"task-buttons\">\n                            <button\n                                onClick={() => handleToggleComplete(task.id)}\n                                className=\"complete-btn\"\n                                title={task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\"}\n                            >\n                                <Check />\n                            </button>\n                            <button\n                                onClick={() => handleDeleteTask(task.id)}\n                                className=\"delete-btn\"\n                                title=\"Eliminar tarea\"\n                            >\n                                <Trash2 />\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            {/* Aqui ira el formulario para agregar nuevas tareas */}\n            <form onSubmit={handleAddTask} className=\"task-form\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Añade una nueva tarea...\"\n                />\n                <button type=\"submit\">Agregar</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TodoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}