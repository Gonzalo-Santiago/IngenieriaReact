{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GONZALO\\\\Documents\\\\706\\\\Ingenieria de software II\\\\react\\\\mi-app-modular\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  // Consumir el contexto de tema\n  const {\n    theme\n  } = useContext(ThemeContext);\n  // Hook de estado para manejar las tareas\n\n  const [tasks, setTasks] = useState([]);\n\n  //Nuevo estado para el campo de texto\n  const [inputValue, setInputValue] = useState('');\n  useEffect(() => {\n    const collectionRef = collection(db, \"tasks\");\n    const q = query(collectionRef, orderBy(\"createdAt\", \"desc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const tasksData = [];\n      querySnapshot.forEach(doc => {\n        tasksData.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setTasks(tasksData);\n    });\n    return unsubscribe; // Cleanup the listener on unmount\n  }, []);\n\n  //Funcion para eliminar una tarea\n  const handleDeleteTask = taskId => {\n    // Filtramos la tarea que tenga el id especificado\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n\n  //Funcion para marcar una tarea como completada/no completada\n  const handleToggleComplete = async taskId => {\n    // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-list-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mi Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task.id),\n            className: \"complete-btn\",\n            title: task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\",\n            children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            className: \"delete-btn\",\n            title: \"Eliminar tarea\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"A\\xF1ade una nueva tarea...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"O389TGaBMdz0Gs/ClpHts+aHQEc=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Trash2","Check","ThemeContext","db","collection","query","orderBy","onSnapshot","addDoc","doc","updateDoc","deleteDoc","serverTimestamp","jsxDEV","_jsxDEV","TodoList","_s","theme","tasks","setTasks","inputValue","setInputValue","collectionRef","q","unsubscribe","querySnapshot","tasksData","forEach","push","data","id","handleDeleteTask","taskId","updatedTasks","filter","task","handleToggleComplete","map","completed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","text","onClick","title","onSubmit","handleAddTask","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/GONZALO/Documents/706/Ingenieria de software II/react/mi-app-modular/src/components/TodoList/TodoList.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\n\n\n\nconst TodoList = () => {\n    // Consumir el contexto de tema\n    const { theme } = useContext(ThemeContext);\n    // Hook de estado para manejar las tareas\n\n\n    const [tasks, setTasks] = useState([])\n\n    //Nuevo estado para el campo de texto\n    const [inputValue, setInputValue] = useState('');\n\n    useEffect(() => {\n\n        const collectionRef = collection(db, \"tasks\");\n        const q = query(collectionRef, orderBy(\"createdAt\", \"desc\"));\n\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n            const tasksData = [];\n            querySnapshot.forEach((doc) => {\n                tasksData.push({ ...doc.data(), id: doc.id });\n            });\n            setTasks(tasksData);\n        });\n\n        return unsubscribe; // Cleanup the listener on unmount\n    }, []);\n\n\n\n\n\n\n\n\n\n    //Funcion para eliminar una tarea\n    const handleDeleteTask = (taskId) => {\n        // Filtramos la tarea que tenga el id especificado\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n    //Funcion para marcar una tarea como completada/no completada\n    const handleToggleComplete = async (taskId) => {\n        // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n        const updatedTasks = tasks.map(task =>\n            task.id === taskId ? { ...task, completed: !task.completed } : task\n        );\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n\n\n\n    return (\n        <div className={`todo-list-container ${theme}`}>\n            <h2>Mi Lista de Tareas</h2>\n            {/*aqui mostraremos la lista de tareas*/}\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id} className={task.completed ? 'completed' : ''}>\n                        <span className=\"task-text\">{task.text}</span>\n                        <div className=\"task-buttons\">\n                            <button\n                                onClick={() => handleToggleComplete(task.id)}\n                                className=\"complete-btn\"\n                                title={task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\"}\n                            >\n                                <Check />\n                            </button>\n                            <button\n                                onClick={() => handleDeleteTask(task.id)}\n                                className=\"delete-btn\"\n                                title=\"Eliminar tarea\"\n                            >\n                                <Trash2 />\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            {/* Aqui ira el formulario para agregar nuevas tareas */}\n            <form onSubmit={handleAddTask} className=\"task-form\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Añade una nueva tarea...\"\n                />\n                <button type=\"submit\">Agregar</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TodoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}