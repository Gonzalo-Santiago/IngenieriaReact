{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GONZALO\\\\Documents\\\\706\\\\Ingenieria de software II\\\\react\\\\mi-app-modular\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\n\n//const collectionRef = collection(db, \"tasks\");\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  // Consumir el contexto de tema\n  const {\n    theme\n  } = useContext(ThemeContext);\n  // Hook de estado para manejar las tareas\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'Aprender react',\n    completed: false\n  }, {\n    id: 2,\n    text: 'Construir una app',\n    completed: false\n  }, {\n    id: 3,\n    text: 'Modularizar componentes',\n    completed: false\n  }]);\n\n  //Nuevo estado para el campo de texto\n  const [inputValue, setInputValue] = useState('');\n  const handleAddTask = async e => {\n    // La hacemos 'async'\n    e.preventDefault();\n    if (inputValue.trim() === '') return;\n\n    // ¡En lugar de solo 'setTasks', escribimos en la BD!\n    await addDoc(collection(db, \"tasks\"), {\n      text: inputValue,\n      isComplete: false,\n      createdAt: serverTimestamp() // Marca de tiempo de Firebase\n    });\n    setInputValue('');\n  };\n\n  //Funcion para eliminar una tarea\n  const handleDeleteTask = taskId => {\n    // Filtramos la tarea que tenga el id especificado\n    const updatedTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n\n  //Funcion para marcar una tarea como completada/no completada\n  const handleToggleComplete = async taskId => {\n    // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n    const updatedTasks = tasks.map(task => task.id === taskId ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-list-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mi Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task.id),\n            className: \"complete-btn\",\n            title: task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\",\n            children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task.id),\n            className: \"delete-btn\",\n            title: \"Eliminar tarea\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"A\\xF1ade una nueva tarea...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"THmhwYQm/XfLqpjsH0druHYDzGg=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useContext","Trash2","Check","ThemeContext","db","collection","query","orderBy","onSnapshot","addDoc","doc","updateDoc","deleteDoc","serverTimestamp","jsxDEV","_jsxDEV","TodoList","_s","theme","tasks","setTasks","id","text","completed","inputValue","setInputValue","handleAddTask","e","preventDefault","trim","isComplete","createdAt","handleDeleteTask","taskId","updatedTasks","filter","task","handleToggleComplete","map","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/GONZALO/Documents/706/Ingenieria de software II/react/mi-app-modular/src/components/TodoList/TodoList.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react'; // Importar iconos de react-icons\nimport ThemeContext from '../../context/ThemeContext'; // Importar el contexto de tema\nimport { db } from '../../firebaseConfig'; // <-- Importa nuestra config\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, serverTimestamp } from \"firebase/firestore\"; // <-- Importa funciones de Firestore\nimport './TodoList.css';\n\n//const collectionRef = collection(db, \"tasks\");\n\n\nconst TodoList = () => {\n    // Consumir el contexto de tema\n    const { theme } = useContext(ThemeContext);\n    // Hook de estado para manejar las tareas\n    \n\n    const [tasks, setTasks] = useState([\n        { id: 1, text: 'Aprender react', completed: false },\n        { id: 2, text: 'Construir una app', completed: false },\n        { id: 3, text: 'Modularizar componentes', completed: false }\n    ])\n\n    //Nuevo estado para el campo de texto\n    const [inputValue, setInputValue] = useState('');\n\n    \n\n    const handleAddTask = async (e) => { // La hacemos 'async'\n        e.preventDefault();\n        if (inputValue.trim() === '') return;\n\n        // ¡En lugar de solo 'setTasks', escribimos en la BD!\n        await addDoc(collection(db, \"tasks\"), {\n            text: inputValue,\n            isComplete: false,\n            createdAt: serverTimestamp() // Marca de tiempo de Firebase\n        });\n\n        setInputValue('');\n        \n    };\n\n\n    \n\n\n\n\n\n    //Funcion para eliminar una tarea\n    const handleDeleteTask = (taskId) => {\n        // Filtramos la tarea que tenga el id especificado\n        const updatedTasks = tasks.filter(task => task.id !== taskId);\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n    //Funcion para marcar una tarea como completada/no completada\n    const handleToggleComplete =async (taskId) => {\n        // Mapeamos las tareas y cambiamos el estado de completed de la tarea con el id especificado\n        const updatedTasks = tasks.map(task =>\n            task.id === taskId ? { ...task, completed: !task.completed } : task\n        );\n        setTasks(updatedTasks); // Actualizamos el estado con la nueva lista\n    }\n\n\n    \n\n    return (\n        <div className={`todo-list-container ${theme}`}>\n            <h2>Mi Lista de Tareas</h2>\n            {/*aqui mostraremos la lista de tareas*/}\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id} className={task.completed ? 'completed' : ''}>\n                        <span className=\"task-text\">{task.text}</span>\n                        <div className=\"task-buttons\">\n                            <button\n                                onClick={() => handleToggleComplete(task.id)}\n                                className=\"complete-btn\"\n                                title={task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\"}\n                            >\n                                <Check />\n                            </button>\n                            <button\n                                onClick={() => handleDeleteTask(task.id)}\n                                className=\"delete-btn\"\n                                title=\"Eliminar tarea\"\n                            >\n                                <Trash2 />\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n            {/* Aqui ira el formulario para agregar nuevas tareas */}\n            <form onSubmit={handleAddTask} className=\"task-form\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Añade una nueva tarea...\"\n                />\n                <button type=\"submit\">Agregar</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TodoList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}