{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\GONZALO\\\\Documents\\\\706\\\\Ingenieria de software II\\\\react\\\\mi-app-modular\\\\src\\\\components\\\\TodoList\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext, useEffect } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react';\nimport ThemeContext from '../../context/ThemeContext';\nimport { db } from '../../firebaseConfig';\nimport { collection, query, orderBy, onSnapshot, addDoc, doc, updateDoc, deleteDoc, getDocs, where, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const {\n    theme\n  } = useContext(ThemeContext);\n  const [tasks, setTasks] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n\n  // 🧭 Cargar tareas en tiempo real\n  useEffect(() => {\n    const collectionRef = collection(db, \"tasks\");\n    const q = query(collectionRef, orderBy(\"createdAt\", \"desc\"));\n    const unsubscribe = onSnapshot(q, querySnapshot => {\n      const tasksData = [];\n      querySnapshot.forEach(doc => {\n        tasksData.push({\n          ...doc.data(),\n          id: doc.id\n        });\n      });\n      setTasks(tasksData);\n    });\n    return unsubscribe;\n  }, []);\n\n  // ➕ Agregar nueva tarea\n  const handleAddTask = async e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') return;\n    await addDoc(collection(db, \"tasks\"), {\n      text: inputValue,\n      completed: false,\n      createdAt: serverTimestamp()\n    });\n    setInputValue('');\n  };\n\n  // ✅ Marcar o desmarcar tarea completada\n  const handleToggleComplete = async task => {\n    const taskRef = doc(db, \"tasks\", task.id);\n    const newCompletedStatus = !task.completed;\n\n    // Cambiar el estado en la colección \"tasks\"\n    await updateDoc(taskRef, {\n      completed: newCompletedStatus\n    });\n    if (newCompletedStatus) {\n      // Si se completó, agregar al historial\n      await addDoc(collection(db, \"historialDeTareasACompletadas\"), {\n        text: task.text,\n        completedAt: serverTimestamp()\n      });\n    } else {\n      // ⚠️ Si se desmarca, eliminar del historial\n      const historialRef = collection(db, \"historialDeTareasACompletadas\");\n      const q = query(historialRef, where(\"text\", \"==\", task.text));\n      const snapshot = await getDocs(q);\n      snapshot.forEach(async docu => {\n        await deleteDoc(doc(db, \"historialDeTareasACompletadas\", docu.id));\n      });\n    }\n  };\n\n  // 🗑️ Eliminar tarea y guardarla en historial\n  const handleDeleteTask = async task => {\n    try {\n      await addDoc(collection(db, \"historial\"), {\n        text: task.text,\n        completed: task.completed,\n        deletedAt: serverTimestamp()\n      });\n      const taskRef = doc(db, \"tasks\", task.id);\n      await deleteDoc(taskRef);\n      console.log(\"Tarea movida al historial correctamente\");\n    } catch (error) {\n      console.error(\"Error al eliminar tarea y mover al historial:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-list-container ${theme}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Mi Lista de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: task.completed ? 'completed' : '',\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"task-text\",\n          children: task.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleToggleComplete(task),\n            className: \"complete-btn\",\n            title: task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\",\n            children: /*#__PURE__*/_jsxDEV(Check, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(task),\n            className: \"delete-btn\",\n            title: \"Eliminar tarea\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddTask,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        placeholder: \"A\\xF1ade una nueva tarea...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Agregar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"O389TGaBMdz0Gs/ClpHts+aHQEc=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useContext","useEffect","Trash2","Check","ThemeContext","db","collection","query","orderBy","onSnapshot","addDoc","doc","updateDoc","deleteDoc","getDocs","where","serverTimestamp","jsxDEV","_jsxDEV","TodoList","_s","theme","tasks","setTasks","inputValue","setInputValue","collectionRef","q","unsubscribe","querySnapshot","tasksData","forEach","push","data","id","handleAddTask","e","preventDefault","trim","text","completed","createdAt","handleToggleComplete","task","taskRef","newCompletedStatus","completedAt","historialRef","snapshot","docu","handleDeleteTask","deletedAt","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","title","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/GONZALO/Documents/706/Ingenieria de software II/react/mi-app-modular/src/components/TodoList/TodoList.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport './TodoList.css';\nimport { Trash2, Check } from 'lucide-react';\nimport ThemeContext from '../../context/ThemeContext';\nimport { db } from '../../firebaseConfig';\nimport {\n    collection,\n    query,\n    orderBy,\n    onSnapshot,\n    addDoc,\n    doc,\n    updateDoc,\n    deleteDoc,\n    getDocs,\n    where,\n    serverTimestamp\n} from \"firebase/firestore\";\n\nconst TodoList = () => {\n    const { theme } = useContext(ThemeContext);\n    const [tasks, setTasks] = useState([]);\n    const [inputValue, setInputValue] = useState('');\n\n    // 🧭 Cargar tareas en tiempo real\n    useEffect(() => {\n        const collectionRef = collection(db, \"tasks\");\n        const q = query(collectionRef, orderBy(\"createdAt\", \"desc\"));\n\n        const unsubscribe = onSnapshot(q, (querySnapshot) => {\n            const tasksData = [];\n            querySnapshot.forEach((doc) => {\n                tasksData.push({ ...doc.data(), id: doc.id });\n            });\n            setTasks(tasksData);\n        });\n\n        return unsubscribe;\n    }, []);\n\n    // ➕ Agregar nueva tarea\n    const handleAddTask = async (e) => {\n        e.preventDefault();\n        if (inputValue.trim() === '') return;\n\n        await addDoc(collection(db, \"tasks\"), {\n            text: inputValue,\n            completed: false,\n            createdAt: serverTimestamp()\n        });\n\n        setInputValue('');\n    };\n\n    // ✅ Marcar o desmarcar tarea completada\n    const handleToggleComplete = async (task) => {\n        const taskRef = doc(db, \"tasks\", task.id);\n        const newCompletedStatus = !task.completed;\n\n        // Cambiar el estado en la colección \"tasks\"\n        await updateDoc(taskRef, {\n            completed: newCompletedStatus\n        });\n\n        if (newCompletedStatus) {\n            // Si se completó, agregar al historial\n            await addDoc(collection(db, \"historialDeTareasACompletadas\"), {\n                text: task.text,\n                completedAt: serverTimestamp()\n            });\n        } else {\n            // ⚠️ Si se desmarca, eliminar del historial\n            const historialRef = collection(db, \"historialDeTareasACompletadas\");\n            const q = query(historialRef, where(\"text\", \"==\", task.text));\n            const snapshot = await getDocs(q);\n\n            snapshot.forEach(async (docu) => {\n                await deleteDoc(doc(db, \"historialDeTareasACompletadas\", docu.id));\n            });\n        }\n    };\n\n    // 🗑️ Eliminar tarea y guardarla en historial\n    const handleDeleteTask = async (task) => {\n        try {\n            await addDoc(collection(db, \"historial\"), {\n                text: task.text,\n                completed: task.completed,\n                deletedAt: serverTimestamp()\n            });\n\n            const taskRef = doc(db, \"tasks\", task.id);\n            await deleteDoc(taskRef);\n\n            console.log(\"Tarea movida al historial correctamente\");\n        } catch (error) {\n            console.error(\"Error al eliminar tarea y mover al historial:\", error);\n        }\n    };\n\n    return (\n        <div className={`todo-list-container ${theme}`}>\n            <h2>Mi Lista de Tareas</h2>\n            <ul>\n                {tasks.map(task => (\n                    <li key={task.id} className={task.completed ? 'completed' : ''}>\n                        <span className=\"task-text\">{task.text}</span>\n                        <div className=\"task-buttons\">\n                            <button\n                                onClick={() => handleToggleComplete(task)}\n                                className=\"complete-btn\"\n                                title={task.completed ? \"Marcar como pendiente\" : \"Marcar como completada\"}\n                            >\n                                <Check />\n                            </button>\n                            <button\n                                onClick={() => handleDeleteTask(task)}\n                                className=\"delete-btn\"\n                                title=\"Eliminar tarea\"\n                            >\n                                <Trash2 />\n                            </button>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n\n            <form onSubmit={handleAddTask} className=\"task-form\">\n                <input\n                    type=\"text\"\n                    value={inputValue}\n                    onChange={(e) => setInputValue(e.target.value)}\n                    placeholder=\"Añade una nueva tarea...\"\n                />\n                <button type=\"submit\">Agregar</button>\n            </form>\n        </div>\n    );\n};\n\nexport default TodoList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}